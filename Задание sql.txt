------------1
CREATE TABLE SHEDULERS AS 
(
	FIO varchar(255),
	SHEDULE varchar(255),
	DATE_BEGIN DATE,
	DATE_END DATE,

	CONSTRAINT AK_SHEDULERS UNIQUE(FIO, DATE_BEGIN),
	CHECK (DATE_BEGIN <= DATE_END) 
);

BULK INSERT SHEDULERS
FROM '\\shedulers.csv'
WITH
    (
    FIRSTROW = 2,
    FIELDTERMINATOR = ' ', 
    ROWTERMINATOR = '\n',   
    TABLOCK
    );

------------2
CREATE TABLE WORK_DAYS AS 
(
	FIO varchar(255),
	DATE_BEGIN DATETIME,
	DATE_END DATETIME
);

------------3
CREATE PROCEDURE CALCULATION_OF_WORKING DAYS
	DATE_B DATETIME,
	DATE_E DATETIME
AS

BEGIN
	-- не успел сделать разбиение на буквы, прошу прощения много работы было, но думаю это то решенияе которое требовалось 



	insert into WORK_DAYS
		select
			t.FIO
			, CASE when SR.SHEDULE = 'Д' then t.date + 1/3
			       when SR.SHEDULE = 'Н' then t.date + 20/24
		               when SR.SHEDULE = 'С' then t.date + 1/3
		               else null end as WORK_START
			, CASE when SR.SHEDULE = 'Д' then t.date + 20/24
			       when SR.SHEDULE = 'Н' then t.date + 32/24
		               when SR.SHEDULE = 'С' then t.date + 1/3 + 1
		               else null end as WORK_END
		from (
			select FIO
			, len(SHEDULE) cnt_d
			, date
			, row_number() over (partition by FIO, DATE_BEGIN) as rn
			, count(date ) over (partition by FIO, DATE_BEGIN) as max_rn
			from SHEDULERS s
			join calendar c on c.date between s.DATE_BEGIN and s.DATE_END
			where s.DATE_BEGIN>=DATE_B
			and   s.DATE_END<= DATE_E
		) t
		join #SHEDULE_row SR on t.FIO = SR.FIO
			and t.DATE_BEGIN = SR.DATE_BEGIN
			and sr.rn = (case when mod(rn/cnt_d) = 0 then cnt_d else mod(rn/cnt_d) end)
		where sr.SHEDULE <>'В';
END;

------------4
SELECT FIO , COUNT(DATE_BEGIN) AS COUNT_WORKDAY
FROM WORK_DAYS 
GROUP BY FIO ;

SELECT FIO , COUNT(DATE_BEGIN) AS COUNT_WORKDAY
FROM WORK_DAYS 
GROUP BY FIO 
HAVING COUNT_WORKDAY > 10;

SELECT FIO 
FROM WORK_DAYS 
WHERE FORMAT(DATE_BEGIN, 'DD.MM.YYYY') BETWEEN '14.01.2019' AND '16.01.2019'  ;
